set -g default-terminal "screen-256color"

set -g mode-keys vi
set -g history-limit 100000

# Setting Ctrl-A as prefix

unbind-key C-b
set -g prefix C-a
bind-key C-a send-prefix

# Using binding + Ctrl + L to clean the screen
bind C-l send-keys 'C-l'

# Avoid window title change

set-option -g allow-rename off

# Avoid hjkl delay that changed panes

set -s escape-time 0

# switch to last pane

# bind-key C-a last-pane

# Allow mouse usage

set-option -g mouse on

# Blink on updates

set -g status-utf8 on
set -g status-justify left
set -g monitor-activity on
set -g visual-activity on
set -g status-left-length 40

# Pane Colors

set-option -g pane-border-fg colour235
set-option -g pane-active-border-bg colour236

setw -g status-fg white
setw -g status-bg colour236
setw -g window-status-fg white
setw -g window-status-bg colour236
setw -g window-status-attr dim
setw -g window-status-current-fg green
setw -g window-status-current-bg colour236
setw -g window-status-current-attr bright
setw -g window-status-activity-attr bold
setw -g window-status-activity-bg colour236
setw -g window-status-activity-fg red

#set inactive/active window styles
set -g window-style 'fg=#dddddd,bg=colour236'
set -g window-active-style 'fg=#ffffff,bg=#000000'

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1

# Do not renumber windows sequentially after closing any of them
set -g renumber-windows off

# soften status bar color from harsh green to light gray
set -g status-bg '#666666'
set -g status-fg '#aaaaaa'

# Use Alt-vim keys without prefix key to switch panes

bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Resize panes

bind -n M-Up resize-pane -U 2
bind -n M-Down resize-pane -D 2
bind -n M-Left resize-pane -L 2
bind -n M-Right resize-pane -R 2

# smart pane switching with awareness of vim splits

is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n M-h if-shell "$is_vim" "send-keys M-h" "select-pane -L"
bind -n M-j if-shell "$is_vim" "send-keys M-j" "select-pane -D"
bind -n M-k if-shell "$is_vim" "send-keys M-k" "select-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys M-l" "select-pane -R"
bind -n M-\ if-shell "$is_vim" "send-keys M-\\" "select-pane -l"

# Bindings for Tmux 2 to allow splitting windows in the current directory, not the home

bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

###########################
# Copy and paste bindings #
###########################

# y and p as in vim
# Ctrl-b [    starts scroll mode

bind Escape copy-mode
unbind p
bind p paste-buffer

# Bind v to start visual selection in vi-copy mode

unbind-key -t vi-copy v # Prior to version 2.4
bind -t vi-copy v begin-selection

# Bind y key in selection mode to copy selection to clipboard

bind -t vi-copy y copy-pipe 'xclip -in -selection clipboard'
bind -t vi-copy 'Space' halfpage-down
bind -t vi-copy 'Bspace' halfpage-up

# Bind Ctrl-v to rectangle selection
# Help from https://superuser.com/questions/395158/tmux-copy-mode-select-text-block
# (There are also references for newer tmux versions)

# Activate 'rectangle selection' then press 'v'
bind-key -t vi-copy 'C-v' rectangle-toggle # Begin selection in copy mode.

################################
# Join and send panes to windows
################################
# Hint from http://unix.stackexchange.com/questions/14300/moving-tmux-pane-to-window

bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"

#############################################
# Sync all panes to execute the same commands
#############################################
## Set On
bind-key C-x setw synchronize-panes on \; display "Panes synchronized!"
## Set Off
bind-key M-x setw synchronize-panes off \; display "Panes unsynchronized!"

#####################
# Reload tmux configs
#####################
bind r source-file ~/.tmux.conf \; display "Reloaded!"
